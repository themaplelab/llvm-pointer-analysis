Args: ./opt -passes=print-alias-pairs -time-passes -track-memory --disable-output -debug 
after runBeforePass(VerifierPass)
Dumping timers for llvm::TimePassesHandler:
	Running:
	Timer 0x600000eafde0 for pass VerifierPass(0)
	Triggered:
after runBeforePass(VerifierAnalysis)
Dumping timers for llvm::TimePassesHandler:
	Running:
	Timer 0x600000eafe80 for pass VerifierAnalysis(0)
	Timer 0x600000eafde0 for pass VerifierPass(0)
	Triggered:
after runAfterPass(VerifierAnalysis)
Dumping timers for llvm::TimePassesHandler:
	Running:
	Timer 0x600000eafde0 for pass VerifierPass(0)
	Triggered:
	Timer 0x600000eafe80 for pass VerifierAnalysis(0)
after runAfterPass(VerifierPass)
Dumping timers for llvm::TimePassesHandler:
	Running:
	Triggered:
	Timer 0x600000eafe80 for pass VerifierAnalysis(0)
	Timer 0x600000eafde0 for pass VerifierPass(0)
after runBeforePass(PrintAliasToPairs)
Dumping timers for llvm::TimePassesHandler:
	Running:
	Timer 0x600000eaff20 for pass PrintAliasToPairs(0)
	Triggered:
	Timer 0x600000eafe80 for pass VerifierAnalysis(0)
	Timer 0x600000eafde0 for pass VerifierPass(0)
after runBeforePass(FlowSensitivePointerAnalysis)
Dumping timers for llvm::TimePassesHandler:
	Running:
	Timer 0x600000ea8000 for pass FlowSensitivePointerAnalysis(0)
	Timer 0x600000eaff20 for pass PrintAliasToPairs(0)
	Triggered:
	Timer 0x600000eafe80 for pass VerifierAnalysis(0)
	Timer 0x600000eafde0 for pass VerifierPass(0)
[2024/07/12 02:22:48.749] Start analyzing module <stdin>
[2024/07/12 02:22:48.750] Initializing function global_opt
[2024/07/12 02:22:48.750] Initializing function printf
[2024/07/12 02:22:48.750] Initializing function exit
[2024/07/12 02:22:48.750] Initializing function main
[2024/07/12 02:22:48.750] Initializing function llvm.memset.p0i8.i64
[2024/07/12 02:22:48.750] Initializing function __strcpy_chk
[2024/07/12 02:22:48.750] Initializing function atoi
[2024/07/12 02:22:48.750] Initializing function __sprintf_chk
[2024/07/12 02:22:48.750] Initializing function refresh_neighbour_lists
[2024/07/12 02:22:48.750] WARNING:  %call = call i64 %33(%struct.network* noundef %34, i64 noundef %conv13) performs an indirect call
[2024/07/12 02:22:48.750] Initializing function flow_cost
[2024/07/12 02:22:48.750] Initializing function llvm.fmuladd.f64
[2024/07/12 02:22:48.750] Initializing function start
[2024/07/12 02:22:48.750] Initializing function getArcPosition
[2024/07/12 02:22:48.750] Initializing function getOriginalArcPosition
[2024/07/12 02:22:48.750] Initializing function flow_org_cost
[2024/07/12 02:22:48.750] Initializing function primal_feasible
[2024/07/12 02:22:48.750] Initializing function dual_feasible
[2024/07/12 02:22:48.751] Initializing function fprintf
[2024/07/12 02:22:48.751] Initializing function getfree
[2024/07/12 02:22:48.751] Initializing function free
[2024/07/12 02:22:48.751] Initializing function read_min
[2024/07/12 02:22:48.751] Initializing function _fopen
[2024/07/12 02:22:48.751] Initializing function fgets
[2024/07/12 02:22:48.751] Initializing function sscanf
[2024/07/12 02:22:48.751] Initializing function calloc
[2024/07/12 02:22:48.751] Initializing function fclose
[2024/07/12 02:22:48.751] Initializing function refreshArcPointers
[2024/07/12 02:22:48.751] WARNING:  %call = call i64 %12(%struct.network* noundef %13, i64 noundef %conv) performs an indirect call
[2024/07/12 02:22:48.751] WARNING:  %call16 = call i64 %24(%struct.network* noundef %25, i64 noundef %conv15) performs an indirect call
[2024/07/12 02:22:48.751] WARNING:  %call30 = call i64 %36(%struct.network* noundef %37, i64 noundef %conv29) performs an indirect call
[2024/07/12 02:22:48.751] Initializing function refreshPositions
[2024/07/12 02:22:48.751] WARNING:  %call3 = call i64 %12(%struct.network* noundef %13, i64 noundef %conv) performs an indirect call
[2024/07/12 02:22:48.751] Initializing function llvm.memcpy.p0i8.p0i8.i64
[2024/07/12 02:22:48.751] Initializing function marc_arcs
[2024/07/12 02:22:48.751] Initializing function malloc
[2024/07/12 02:22:48.751] Initializing function arc_compare
[2024/07/12 02:22:48.751] Initializing function resize_prob
[2024/07/12 02:22:48.751] Initializing function realloc
[2024/07/12 02:22:48.751] Initializing function fflush
[2024/07/12 02:22:48.751] Initializing function insert_new_arc
[2024/07/12 02:22:48.751] Initializing function replace_weaker_arc
[2024/07/12 02:22:48.751] Initializing function calculate_max_redcost
[2024/07/12 02:22:48.751] Initializing function switch_arcs
[2024/07/12 02:22:48.751] Initializing function price_out_impl
[2024/07/12 02:22:48.752] Initializing function suspend_impl
[2024/07/12 02:22:48.752] Initializing function primal_start_artificial
[2024/07/12 02:22:48.752] Initializing function write_circulations
[2024/07/12 02:22:48.752] Initializing function write_objective_value
[2024/07/12 02:22:48.752] Initializing function update_tree
[2024/07/12 02:22:48.752] Initializing function primal_iminus
[2024/07/12 02:22:48.752] Initializing function primal_update_flow
[2024/07/12 02:22:48.752] Initializing function markBaskets
[2024/07/12 02:22:48.752] Initializing function worker
[2024/07/12 02:22:48.752] Initializing function master
[2024/07/12 02:22:48.752] Initializing function primal_net_simplex
[2024/07/12 02:22:48.752] Initializing function set_static_vars
[2024/07/12 02:22:48.752] Initializing function bea_is_dual_infeasible
[2024/07/12 02:22:48.752] Initializing function cost_compare
[2024/07/12 02:22:48.752] Initializing function primal_bea_mpp
[2024/07/12 02:22:48.752] Initializing function spec_qsort
[2024/07/12 02:22:48.752] WARNING:  %call = call i32 %18(i8* noundef %add.ptr23, i8* noundef %21) performs an indirect call
[2024/07/12 02:22:48.753] WARNING:  %call99 = call i32 %130(i8* noundef %131, i8* noundef %132) performs an indirect call
[2024/07/12 02:22:48.753] WARNING:  %call126 = call i32 %170(i8* noundef %171, i8* noundef %172) performs an indirect call
[2024/07/12 02:22:48.753] WARNING:  %call190 = call i32 %253(i8* noundef %add.ptr189, i8* noundef %256) performs an indirect call
[2024/07/12 02:22:48.753] Initializing function swapfunc
[2024/07/12 02:22:48.753] Initializing function med3
[2024/07/12 02:22:48.753] WARNING:  %call = call i32 %0(i8* noundef %1, i8* noundef %2) performs an indirect call
[2024/07/12 02:22:48.753] WARNING:  %call2 = call i32 %3(i8* noundef %4, i8* noundef %5) performs an indirect call
[2024/07/12 02:22:48.753] WARNING:  %call5 = call i32 %7(i8* noundef %8, i8* noundef %9) performs an indirect call
[2024/07/12 02:22:48.754] WARNING:  %call12 = call i32 %12(i8* noundef %13, i8* noundef %14) performs an indirect call
[2024/07/12 02:22:48.754] WARNING:  %call16 = call i32 %16(i8* noundef %17, i8* noundef %18) performs an indirect call
[2024/07/12 02:22:48.754] Analyzing function: global_opt with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: printf with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: exit with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: main with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: llvm.memset.p0i8.i64 with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: __strcpy_chk with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: atoi with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: __sprintf_chk with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: refresh_neighbour_lists with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: flow_cost with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: llvm.fmuladd.f64 with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: start with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: getArcPosition with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: getOriginalArcPosition with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: flow_org_cost with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: primal_feasible with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: dual_feasible with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: fprintf with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: getfree with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: free with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: read_min with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: _fopen with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: fgets with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: sscanf with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: calloc with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: fclose with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: refreshArcPointers with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: refreshPositions with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: llvm.memcpy.p0i8.p0i8.i64 with pointer level: 4
[2024/07/12 02:22:48.754] Analyzing function: marc_arcs with pointer level: 4
[2024/07/12 02:22:48.754] Marking labels for   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8
[2024/07/12 02:22:48.754] Building def-use graph for   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at   store %struct.arc*** %arcs_pointer_sorted, %struct.arc**** %arcs_pointer_sorted.addr, align 8
[2024/07/12 02:22:48.754] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  store %struct.arc*** %arcs_pointer_sorted, %struct.arc**** %arcs_pointer_sorted.addr, align 8
[2024/07/12 02:22:48.754] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  store %struct.arc*** %arcs_pointer_sorted, %struct.arc**** %arcs_pointer_sorted.addr, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  store i64* %new_arcs_array, i64** %new_arcs_array.addr, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  store i64* %new_arcs, i64** %new_arcs.addr, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  store %struct.network* %net, %struct.network** %net.addr, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %num_threads = alloca i64, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %arc = alloca %struct.arc*, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %i = alloca i64, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %start_id = alloca i64, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %best_pos = alloca i64, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %global_new = alloca i64, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %values = alloca i64*, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %positions = alloca %struct.arc***, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %max_new_arcs = alloca i64, align 8
[2024/07/12 02:22:48.755] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8
[2024/07/12 02:22:48.756] Add def Use edge   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 ===   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 ===>   store %struct.arc*** %arcs_pointer_sorted, %struct.arc**** %arcs_pointer_sorted.addr, align 8
[2024/07/12 02:22:48.756] Building def-use graph for   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at   %18 = load %struct.arc***, %struct.arc**** %arcs_pointer_sorted.addr, align 8
[2024/07/12 02:22:48.756] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %18 = load %struct.arc***, %struct.arc**** %arcs_pointer_sorted.addr, align 8
[2024/07/12 02:22:48.756] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %18 = load %struct.arc***, %struct.arc**** %arcs_pointer_sorted.addr, align 8
[2024/07/12 02:22:48.756] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  store i64 %add, i64* %16, align 8
[2024/07/12 02:22:48.756] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %add = add nsw i64 %17, %15
[2024/07/12 02:22:48.756] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %17 = load i64, i64* %16, align 8
[2024/07/12 02:22:48.756] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %16 = load i64*, i64** %new_arcs.addr, align 8
[2024/07/12 02:22:48.757] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %15 = load i64, i64* %arrayidx, align 8
[2024/07/12 02:22:48.757] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %arrayidx = getelementptr inbounds i64, i64* %13, i64 %14
[2024/07/12 02:22:48.757] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %14 = load i64, i64* %i, align 8
[2024/07/12 02:22:48.757] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %13 = load i64*, i64** %new_arcs_array.addr, align 8
[2024/07/12 02:22:48.757] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.cond::  br i1 %cmp5, label %for.body, label %for.end
[2024/07/12 02:22:48.757] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.cond::  %cmp5 = icmp slt i64 %11, %12
[2024/07/12 02:22:48.757] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.cond::  %12 = load i64, i64* %num_threads, align 8
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.cond::  %11 = load i64, i64* %i, align 8
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.inc::  br label %for.cond
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.inc::  store i64 %inc, i64* %i, align 8
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.inc::  %inc = add nsw i64 %25, 1
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.inc::  %25 = load i64, i64* %i, align 8
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  br label %for.inc
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  store i64 0, i64* %arrayidx8, align 8
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %arrayidx8 = getelementptr inbounds i64, i64* %23, i64 %24
[2024/07/12 02:22:48.758] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %24 = load i64, i64* %i, align 8
[2024/07/12 02:22:48.759] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %23 = load i64*, i64** %values, align 8
[2024/07/12 02:22:48.759] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  store %struct.arc** %20, %struct.arc*** %arrayidx7, align 8
[2024/07/12 02:22:48.759] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %arrayidx7 = getelementptr inbounds %struct.arc**, %struct.arc*** %21, i64 %22
[2024/07/12 02:22:48.759] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %22 = load i64, i64* %i, align 8
[2024/07/12 02:22:48.759] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %21 = load %struct.arc***, %struct.arc**** %positions, align 8
[2024/07/12 02:22:48.759] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %20 = load %struct.arc**, %struct.arc*** %arrayidx6, align 8
[2024/07/12 02:22:48.759] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %arrayidx6 = getelementptr inbounds %struct.arc**, %struct.arc*** %18, i64 %19
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::for.body::  %19 = load i64, i64* %i, align 8
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.end::  br label %for.cond
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.end::  store i64 0, i64* %i, align 8
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.end::  store i64 0, i64* %10, align 8
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.end::  %10 = load i64*, i64** %new_arcs.addr, align 8
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.else::  br label %if.end
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.else::  store i64 %sub4, i64* %max_new_arcs, align 8
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.else::  %sub4 = sub nsw i64 %9, 4000000
[2024/07/12 02:22:48.760] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.else::  %9 = load i64, i64* %max_residual_new_m3, align 8
[2024/07/12 02:22:48.761] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.else::  %max_residual_new_m3 = getelementptr inbounds %struct.network, %struct.network* %8, i32 0, i32 8
[2024/07/12 02:22:48.761] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::if.else::  %8 = load %struct.network*, %struct.network** %net.addr, align 8
[2024/07/12 02:22:48.761] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  br i1 %cmp, label %if.then, label %if.else
[2024/07/12 02:22:48.761] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %cmp = icmp sle i64 %5, 15000
[2024/07/12 02:22:48.761] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %5 = load i64, i64* %n_trips, align 8
[2024/07/12 02:22:48.761] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %n_trips = getelementptr inbounds %struct.network, %struct.network* %4, i32 0, i32 3
[2024/07/12 02:22:48.761] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %4 = load %struct.network*, %struct.network** %net.addr, align 8
[2024/07/12 02:22:48.762] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  store i64* %3, i64** %values, align 8
[2024/07/12 02:22:48.762] Finding defs of   %arcs_pointer_sorted.addr = alloca %struct.arc***, align 8 at program location marc_arcs::entry::  %3 = bitcast i8* %call2 to i64*
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump:
0.	Program arguments: ./opt -passes=print-alias-pairs -time-passes -track-memory --disable-output -debug
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  opt                      0x00000001088f096c llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 80
1  opt                      0x00000001088f0e90 PrintStackTraceSignalHandler(void*) + 28
2  opt                      0x00000001088ef08c llvm::sys::RunSignalHandlers() + 148
3  opt                      0x00000001088f1fd8 SignalHandler(int) + 276
4  libsystem_platform.dylib 0x0000000194563584 _sigtramp + 56
5  opt                      0x00000001089a6534 llvm::FlowSensitivePointerAnalysis::findDefFromFunc(llvm::Function const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >) + 188
6  opt                      0x00000001089a6a9c llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 940
7  opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
8  opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
9  opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
10 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
11 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
12 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
13 opt                      0x00000001089a6db8 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1736
14 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
15 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
16 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
17 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
18 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
19 opt                      0x00000001089a6db8 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1736
20 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
21 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
22 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
23 opt                      0x00000001089a6db8 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1736
24 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
25 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
26 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
27 opt                      0x00000001089a6db8 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1736
28 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
29 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
30 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
31 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
32 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
33 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
34 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
35 opt                      0x00000001089a6af4 llvm::FlowSensitivePointerAnalysis::findDefFromInst(llvm::Instruction const*, llvm::Value const*, std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >&, std::__1::vector<llvm::Instruction const*, std::__1::allocator<llvm::Instruction const*> >, bool) + 1028
36 opt                      0x00000001089a4eb4 llvm::FlowSensitivePointerAnalysis::findDefFromPrevOfUseLoc(llvm::Instruction const*, llvm::Value const*) + 556
37 opt                      0x00000001089a5bcc llvm::FlowSensitivePointerAnalysis::buildDefUseGraph(std::__1::set<llvm::Instruction const*, std::__1::less<llvm::Instruction const*>, std::__1::allocator<llvm::Instruction const*> >, llvm::Value const*) + 272
38 opt                      0x00000001089aaf10 llvm::FlowSensitivePointerAnalysis::performPointerAnalysisOnFunction(llvm::Function const*, unsigned long) + 472
39 opt                      0x00000001089ab1f0 llvm::FlowSensitivePointerAnalysis::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 384
40 opt                      0x0000000108d90310 llvm::detail::AnalysisPassModel<llvm::Module, llvm::FlowSensitivePointerAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 60
41 opt                      0x0000000107a6b658 llvm::AnalysisManager<llvm::Module>::getResultImpl(llvm::AnalysisKey*, llvm::Module&) + 376
42 opt                      0x00000001089d55e0 llvm::FlowSensitivePointerAnalysis::Result& llvm::AnalysisManager<llvm::Module>::getResult<llvm::FlowSensitivePointerAnalysis>(llvm::Module&) + 148
43 opt                      0x0000000108a7fa54 llvm::PrintAliasToPairs::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 56
44 opt                      0x0000000108dcb3f0 llvm::detail::PassModel<llvm::Module, llvm::PrintAliasToPairs, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module> >::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 52
45 opt                      0x0000000107a687d8 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module> >::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 304
46 opt                      0x00000001047bd1f4 llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::StringRef>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool) + 5092
47 opt                      0x0000000104815980 main + 5248
48 dyld                     0x00000001941aa0e0 start + 2360
